{
	"info": {
		"_postman_id": "3ce00ed8-9bc5-4575-8471-24a1e109bbe0",
		"name": "Todolist_api_collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "projects",
			"item": [
				{
					"name": "https://developer.todoist.com/rest/v1/#getting-started",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"REST API Reference | Todoist Developer\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://developer.todoist.com/rest/v1/#getting-started",
							"protocol": "https",
							"host": [
								"developer",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								""
							],
							"hash": "getting-started"
						}
					},
					"response": []
				},
				{
					"name": "https://developer.todoist.com/rest/v1/#get-a-user-39-s-projects",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://developer.todoist.com/rest/v1/#get-a-user-39-s-projects",
							"protocol": "https",
							"host": [
								"developer",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								""
							],
							"hash": "get-a-user-39-s-projects"
						},
						"description": "testing user project"
					},
					"response": []
				},
				{
					"name": "https://api.todoist.com/rest/v1/projects",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"https://todoist.com/showProject?id=2267090231\");",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"Created\");",
									"});",
									"var schema = {",
									"    \"items\": {",
									"        \"type\": \"boolean\"",
									"    }",
									"};",
									"",
									"var data1 = [true, false];",
									"var data2 = [true, 123];",
									"",
									"pm.test('Schema is valid', function () {",
									"    pm.expect(tv4.validate(data1, schema)).to.be.true;",
									"    pm.expect(tv4.validate(data2, schema)).to.be.true;",
									"});",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"response_body_string\");",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.todoist.com/rest/v1/projects",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"projects"
							]
						},
						"description": "checking for project"
					},
					"response": []
				},
				{
					"name": "https://api.todoist.com/rest/v1/project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/project",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"project"
							]
						},
						"description": "checking wrong url"
					},
					"response": []
				},
				{
					"name": "https://api.todoist.com/rest/v1/projects",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql(sports);",
									"});",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"sports\",\n    \"comment_count\": 0,\n    \"color\": 47,\n    \"shared\": false,\n    \"sync_id\": 0,\n    \"order\": 1,\n    \"favorite\": false,\n    \"url\": \"https://todoist.com/showProject?id=2203306141\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.todoist.com/rest/v1/projects",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"projects"
							]
						},
						"description": "post request with project api"
					},
					"response": []
				},
				{
					"name": "https://api.todoist.com/rest/v1/projects/2267105578",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"response_body_string\");",
									"});",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"\");",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"No Content\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Games\"     \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.todoist.com/rest/v1/projects/2267105578",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"projects",
								"2267105578"
							]
						},
						"description": "updating a project data"
					},
					"response": []
				},
				{
					"name": "https://api.todoist.com/rest/v1/projects/2267092168",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"Created\");",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"No Content\");",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\");",
									"});",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"\");",
									"});",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"response_body_string\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/projects/2267092168",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"projects",
								"2267092168"
							]
						},
						"description": "deleting a project"
					},
					"response": []
				},
				{
					"name": "https://api.todoist.com/rest/v1/projects/2267090231/collaborators",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"[]\");",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"response_body_string\");",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"Created\");",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/projects/2267090231/collaborators",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"projects",
								"2267090231",
								"collaborators"
							]
						},
						"description": "getting collaborator with get method"
					},
					"response": []
				}
			],
			"description": "request regarding project end api"
		},
		{
			"name": "tasks",
			"item": [
				{
					"name": "https://api.todoist.com/rest/v1/tasks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"response_body_string\");",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Buy Milk\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/tasks",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"tasks"
							]
						},
						"description": "get request of task"
					},
					"response": []
				},
				{
					"name": "https://api.todoist.com/rest/v1/tasks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.content).to.eql(\"Buy Milk\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\" : 2995104339,\n    \"content\": \"Buy Milk\",\n    \"description\": \"\",\n    \"comment_count\": 0,\n    \"completed\": false,\n    \"order\": 1,\n    \"priority\": 1,\n    \"project_id\": 2267090232,\n    \"section_id\": 0,\n    \"parent_id\": 0,\n    \"url\": \"https://todoist.com/showTask?id=2995104339\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.todoist.com/rest/v1/tasks",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "https://api.todoist.com/rest/v1/tasks/4892453394",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Buy Milk\");",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"response_body_string\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/tasks/4892453394",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"tasks",
								"4892453394"
							]
						},
						"description": "getting active tasks"
					},
					"response": []
				},
				{
					"name": "https://api.todoist.com/rest/v1/tasks/4892453394",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"Created\");",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"No Content\");",
									"});",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"response_body_string\");",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearer}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/tasks/4892453394",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"tasks",
								"4892453394"
							]
						},
						"description": "deleting a task"
					},
					"response": []
				},
				{
					"name": "https://api.todoist.com/rest/v1/tasks/4892453394",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"string_you_want_to_search\");",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\");",
									"",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearer}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"Buy groceries\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.todoist.com/rest/v1/tasks/4892453394",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"tasks",
								"4892453394"
							]
						},
						"description": "updating the task"
					},
					"response": []
				},
				{
					"name": "https://api.todoist.com/rest/v1/tasks/4892453394/close",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"string_you_want_to_search\");",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\");",
									"",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearer}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/tasks/4892453394/close",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"tasks",
								"4892453394",
								"close"
							]
						},
						"description": "closing a task"
					},
					"response": []
				},
				{
					"name": "https://api.todoist.com/rest/v1/tasks/4892453394/reopen",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"Created\");",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"No Content\");",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"string_you_want_to_search\");",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\");",
									"});",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearer}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/tasks/4892453394/reopen",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"tasks",
								"4892453394",
								"reopen"
							]
						},
						"description": "reopening the task"
					},
					"response": []
				}
			],
			"description": "requets and respines that for end api"
		},
		{
			"name": "section",
			"item": [
				{
					"name": "https://api.todoist.com/rest/v1/sections?project_id=2267090232",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Let’s get started with a few tips\");",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"Created\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearer}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/sections?project_id=2267090232",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"sections"
							],
							"query": [
								{
									"key": "project_id",
									"value": "2267090232"
								}
							]
						},
						"description": "get all sections from project"
					},
					"response": []
				},
				{
					"name": "https://api.todoist.com/rest/v1/sections",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"});",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"response_body_string\");",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Madhu\");",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Doing\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearer}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/sections",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"sections"
							]
						},
						"description": "getting all sections from all projects"
					},
					"response": []
				},
				{
					"name": "https://api.todoist.com/rest/v1/sections",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Groceries\");",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"pm.test(\"Status code name has string\", function (){",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"var schema = {",
									"    \"items\": {",
									"        \"type\": \"boolean\"",
									"    }",
									"};",
									"",
									"var data1 = [true, false];",
									"var data2 = [true, 123];",
									"",
									"pm.test('Schema is valid', function () {",
									"    pm.expect(tv4.validate(data1, schema)).to.be.true;",
									"    pm.expect(tv4.validate(data2, schema)).to.be.true;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearer}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"project_id\":2267092410,\n     \"name\":\"Groceries\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.todoist.com/rest/v1/sections",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"sections"
							]
						},
						"description": "creating a section in project"
					},
					"response": []
				},
				{
					"name": "https://api.todoist.com/rest/v1/sections/50961803",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"});",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearer}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/sections/50961803",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"sections",
								"50961803"
							]
						},
						"description": "getting a section from its id"
					},
					"response": []
				},
				{
					"name": "https://api.todoist.com/rest/v1/sections/50961803",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"No Content\");",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"response_body_string\");",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"madhu\");",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearer}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"Supermarket\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.todoist.com/rest/v1/sections/50961803",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"sections",
								"50961803"
							]
						},
						"description": "updating a section"
					},
					"response": []
				},
				{
					"name": "https://api.todoist.com/rest/v1/sections/50961803",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"Created\");",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"No Content\");",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Madhu\");",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\");",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearer}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/sections/50961803",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"sections",
								"50961803"
							]
						},
						"description": "deleting  a section"
					},
					"response": []
				}
			]
		},
		{
			"name": "comments",
			"item": [
				{
					"name": "https://api.todoist.com/rest/v1/comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200, 202]);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Need one bottle of milk\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearer}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"task_id\": 4893273103,\n    \"content\": \"Need one bottle of milk\",\n    \"attachment\": {\n        \"resource_type\": \"file\",\n        \"file_url\": \"https://s3.amazonaws.com/domorebetter/Todoist+Setup+Guide.pdf\",\n        \"file_type\": \"application/pdf\",\n        \"file_name\": \"File.pdf\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.todoist.com/rest/v1/comments",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"comments"
							]
						},
						"description": "creating a comment in the task"
					},
					"response": []
				},
				{
					"name": "https://api.todoist.com/rest/v1/comments/2847021825",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Need one bottle of milk\");",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearer}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/comments/2847021825",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"comments",
								"2847021825"
							]
						},
						"description": "getting a comment "
					},
					"response": []
				},
				{
					"name": "https://api.todoist.com/rest/v1/comments?task_id=4893273103",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Need one bottle of milk\");",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearer}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/comments?task_id=4893273103",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"comments"
							],
							"query": [
								{
									"key": "task_id",
									"value": "4893273103"
								}
							]
						},
						"description": "getting a particular comment from a given task"
					},
					"response": []
				},
				{
					"name": "https://api.todoist.com/rest/v1/comments/2847021825",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\");",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Madhu\");",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"No Content\");",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearer}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"content\": \"Need two bottles of milk\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.todoist.com/rest/v1/comments/2847021825",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"comments",
								"2847021825"
							]
						},
						"description": "updating a comment"
					},
					"response": []
				},
				{
					"name": "https://api.todoist.com/rest/v1/comments/2847021825",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\");",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Madhu\");",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"No Content\");",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearer}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/comments/2847021825",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"comments",
								"2847021825"
							]
						},
						"description": "deleting a comment"
					},
					"response": []
				}
			]
		},
		{
			"name": "Labels",
			"item": [
				{
					"name": "https://api.todoist.com/rest/v1/labels",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202,200]);",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Food\");",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"Created\");",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearer}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"Food\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.todoist.com/rest/v1/labels",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"labels"
							]
						},
						"description": "creating label"
					},
					"response": []
				},
				{
					"name": "https://api.todoist.com/rest/v1/labels",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Food\");",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"Created\");",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearer}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/labels",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"labels"
							]
						},
						"description": "get a label"
					},
					"response": []
				},
				{
					"name": "https://api.todoist.com/rest/v1/labels/2157205341",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Food\");",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"Created\");",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearer}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/labels/2157205341",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"labels",
								"2157205341"
							]
						},
						"description": "getting label by id\n"
					},
					"response": []
				},
				{
					"name": "https://api.todoist.com/rest/v1/labels/2157205341",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202,200]);",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Food\");",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"Created\");",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"No Content\");",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Drinks\");",
									"});",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"\");",
									"});",
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearer}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"Drinks\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.todoist.com/rest/v1/labels/2157205341",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"labels",
								"2157205341"
							]
						},
						"description": "updating a label"
					},
					"response": []
				},
				{
					"name": "https://api.todoist.com/rest/v1/labels/2157205341",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"No Content\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearer}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/labels/2157205341",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"labels",
								"2157205341"
							]
						},
						"description": "deleting a label"
					},
					"response": []
				}
			]
		}
	]
}